// app/api/generar-url/route.ts

import { NextResponse } from "next/server";

export async function POST(req: Request) {
  try {
    const { mensaje } = await req.json();

    console.log("üü¢ Mensaje recibido:", mensaje);

    const prompt = `Tu tarea es generar URLs v√°lidas de la tienda https://divino.com.uy seg√∫n las siguientes reglas:
                - Para categor√≠as: usa /<slug>
                - Para productos: usa /producto/<slug> ‚Äî solo si se menciona un producto espec√≠fico, no un tipo o categor√≠a gen√©rica.
                - Para t√©rminos ambiguos o gen√©ricos que no se puedan identificar como categor√≠a ni producto concreto, devolv√© /catalogo?q=<slug>

                Convert√≠ los nombres a slug (todo en min√∫scula, con guiones en vez de espacios).

                ‚ö†Ô∏è Importante:
                - Solo gener√° una URL si el mensaje del usuario incluye una consulta concreta sobre un producto o una categor√≠a de producto.
                - Si el mensaje hace referencia general a un tipo de producto o espacio (como ‚Äúproductos de oficina‚Äù, ‚Äúalgo para el living‚Äù, ‚Äúmuebles‚Äù, ‚Äúproductos de dormitorio‚Äù), interpretalo como una consulta sobre una categor√≠a y devolv√© la URL correspondiente a esa categor√≠a.
                - Si el t√©rmino es vago o no coincide claramente con una categor√≠a o producto espec√≠fico, devolv√© una b√∫squeda con /catalogo?q=<slug>
                - No generes una URL si el mensaje es solo un saludo, presentaci√≥n o una frase gen√©rica sin relaci√≥n con productos o categor√≠as.

                El usuario dijo: "${mensaje}"

                Respond√© EXCLUSIVAMENTE con este JSON sin agregar explicaciones ni texto adicional. No pongas palabras antes ni despu√©s:
                {
                  "url": "https://divino.com.uy/..."
                }

                IMPORTANTE: Si no hay una coincidencia √∫til, devolv√©:
                {
                  "url": null
                }

          `;

    const response = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${process.env.OPENAI_API_KEY}`,
      },
      body: JSON.stringify({
        model: "gpt-3.5-turbo",
        temperature: 0,
        messages: [{ role: "user", content: prompt }],
      }),
    });

    const data = await response.json();
    const raw = data.choices?.[0]?.message?.content || "";

    console.log("üîé Contenido recibido de OpenAI:", raw);

    if (!raw || !raw.trim().startsWith("{")) {
      return NextResponse.json({ url: null }, { status: 200 });
    }

    const parsed = JSON.parse(raw);
    return NextResponse.json({ url: parsed.url || null });
  } catch (error) {
    console.error("‚ùå Error interno en generar-url:", error);
    return NextResponse.json({ url: null }, { status: 500 });
  }
}
